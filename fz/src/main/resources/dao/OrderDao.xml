<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhm.fz.dao.OrderDao">
    <resultMap id="orderDetailResultMap" type="com.xhm.fz.dto.OrderDetail" extends="com.xhm.fz.mapper.OrderMapper.BaseResultMap">
        <collection property="orderItemList" resultMap="com.xhm.fz.mapper.OrderItemMapper.BaseResultMap" columnPrefix="item_"/>
        <collection property="historyList" resultMap="com.xhm.fz.mapper.OrderOperateHistoryMapper.BaseResultMap" columnPrefix="history_"/>
    </resultMap>
    <select id="getList" resultMap="com.xhm.fz.mapper.OrderMapper.BaseResultMap">
        SELECT *
        FROM
        `order`
        WHERE
        delete_status = 0
        <if test="queryParam.orderSn!=null and queryParam.orderSn!=''">
            AND order_sn = #{queryParam.orderSn}
        </if>
        <if test="queryParam.status!=null">
            AND `status` = #{queryParam.status}
        </if>
        <if test="queryParam.sourceType!=null">
            AND source_type = #{queryParam.sourceType}
        </if>
        <if test="queryParam.orderType!=null">
            AND order_type = #{queryParam.orderType}
        </if>
        <if test="queryParam.createTime!=null and queryParam.createTime!=''">
            AND create_time LIKE concat(#{queryParam.createTime},"%")
        </if>
        <if test="queryParam.receiverKeyword!=null and queryParam.receiverKeyword!=''">
            AND (
            receiver_name LIKE concat("%",#{queryParam.receiverKeyword},"%")
            OR receiver_phone LIKE concat("%",#{queryParam.receiverKeyword},"%")
            )
        </if>
    </select>
    <update id="delivery">
        UPDATE `order`
        SET
        delivery_sn = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.orderId} THEN #{item.deliverySn}
        </foreach>
        END,
        delivery_company = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.orderId} THEN #{item.deliveryCompany}
        </foreach>
        END,
        delivery_time = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.orderId} THEN now()
        </foreach>
        END,
        `status` = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.orderId} THEN 2
        </foreach>
        END
        WHERE
        id IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.orderId}
        </foreach>
        AND `status` = 1
    </update>
    <select id="getDetail" resultMap="orderDetailResultMap">
        SELECT o.*,
            oi.id item_id,
            oi.clothing_id item_clothing_id,
            oi.clothing_sn item_clothing_sn,
            oi.clothing_pic item_clothing_pic,
            oi.clothing_name item_clothing_name,
            oi.clothing_brand item_clothing_brand,
            oi.clothing_price item_clothing_price,
            oi.clothing_quantity item_clothing_quantity,
            oi.clothing_attr item_clothing_attr,
            oh.id history_id,
            oh.operate_man history_operate_man,
            oh.create_time history_create_time,
            oh.order_status history_order_status,
            oh.note history_note
        FROM
            `order` o
            LEFT JOIN order_item oi ON o.id = oi.order_id
            LEFT JOIN order_operate_history oh ON o.id = oh.order_id
        WHERE
            o.id = #{id}
        ORDER BY oi.id ASC,oh.create_time DESC
    </select>
    <select id="getUserOrder" resultMap="orderDetailResultMap">
        SELECT o.*,
            oi.id item_id,
            oi.clothing_id item_clothing_id,
            oi.clothing_sn item_clothing_sn,
            oi.clothing_pic item_clothing_pic,
            oi.clothing_name item_clothing_name,
            oi.clothing_brand item_clothing_brand,
            oi.clothing_price item_clothing_price,
            oi.clothing_quantity item_clothing_quantity,
            oi.clothing_attr item_clothing_attr,
            oh.id history_id,
            oh.operate_man history_operate_man,
            oh.create_time history_create_time,
            oh.order_status history_order_status,
            oh.note history_note
        FROM
            `order` o
            LEFT JOIN order_item oi ON o.id = oi.order_id
            LEFT JOIN order_operate_history oh ON o.id = oh.order_id
        WHERE
            o.user_id = #{userId}
        ORDER BY oi.id ASC,oh.create_time DESC
    </select>
</mapper>