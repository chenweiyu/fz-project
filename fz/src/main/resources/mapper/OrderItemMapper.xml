<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhm.fz.mapper.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.xhm.fz.entity.OrderItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="clothing_id" jdbcType="BIGINT" property="clothingId" />
    <result column="clothing_pic" jdbcType="VARCHAR" property="clothingPic" />
    <result column="clothing_name" jdbcType="VARCHAR" property="clothingName" />
    <result column="clothing_brand" jdbcType="VARCHAR" property="clothingBrand" />
    <result column="clothing_sn" jdbcType="VARCHAR" property="clothingSn" />
    <result column="clothing_price" jdbcType="DECIMAL" property="clothingPrice" />
    <result column="clothing_quantity" jdbcType="INTEGER" property="clothingQuantity" />
    <result column="clothing_sku_id" jdbcType="BIGINT" property="clothingSkuId" />
    <result column="clothing_sku_code" jdbcType="VARCHAR" property="clothingSkuCode" />
    <result column="clothing_category_id" jdbcType="BIGINT" property="clothingCategoryId" />
    <result column="promotion_name" jdbcType="VARCHAR" property="promotionName" />
    <result column="promotion_amount" jdbcType="DECIMAL" property="promotionAmount" />
    <result column="coupon_amount" jdbcType="DECIMAL" property="couponAmount" />
    <result column="integration_amount" jdbcType="DECIMAL" property="integrationAmount" />
    <result column="real_amount" jdbcType="DECIMAL" property="realAmount" />
    <result column="gift_integration" jdbcType="INTEGER" property="giftIntegration" />
    <result column="gift_growth" jdbcType="INTEGER" property="giftGrowth" />
    <result column="clothing_attr" jdbcType="VARCHAR" property="clothingAttr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, order_sn, clothing_id, clothing_pic, clothing_name, clothing_brand, clothing_sn, 
    clothing_price, clothing_quantity, clothing_sku_id, clothing_sku_code, clothing_category_id, 
    promotion_name, promotion_amount, coupon_amount, integration_amount, real_amount, 
    gift_integration, gift_growth, clothing_attr
  </sql>
  <select id="selectByExample" parameterType="com.xhm.fz.entity.OrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhm.fz.entity.OrderItemExample">
    delete from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhm.fz.entity.OrderItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_item (order_id, order_sn, clothing_id, 
      clothing_pic, clothing_name, clothing_brand, 
      clothing_sn, clothing_price, clothing_quantity, 
      clothing_sku_id, clothing_sku_code, clothing_category_id, 
      promotion_name, promotion_amount, coupon_amount, 
      integration_amount, real_amount, gift_integration, 
      gift_growth, clothing_attr)
    values (#{orderId,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{clothingId,jdbcType=BIGINT}, 
      #{clothingPic,jdbcType=VARCHAR}, #{clothingName,jdbcType=VARCHAR}, #{clothingBrand,jdbcType=VARCHAR}, 
      #{clothingSn,jdbcType=VARCHAR}, #{clothingPrice,jdbcType=DECIMAL}, #{clothingQuantity,jdbcType=INTEGER}, 
      #{clothingSkuId,jdbcType=BIGINT}, #{clothingSkuCode,jdbcType=VARCHAR}, #{clothingCategoryId,jdbcType=BIGINT}, 
      #{promotionName,jdbcType=VARCHAR}, #{promotionAmount,jdbcType=DECIMAL}, #{couponAmount,jdbcType=DECIMAL}, 
      #{integrationAmount,jdbcType=DECIMAL}, #{realAmount,jdbcType=DECIMAL}, #{giftIntegration,jdbcType=INTEGER}, 
      #{giftGrowth,jdbcType=INTEGER}, #{clothingAttr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xhm.fz.entity.OrderItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="clothingId != null">
        clothing_id,
      </if>
      <if test="clothingPic != null">
        clothing_pic,
      </if>
      <if test="clothingName != null">
        clothing_name,
      </if>
      <if test="clothingBrand != null">
        clothing_brand,
      </if>
      <if test="clothingSn != null">
        clothing_sn,
      </if>
      <if test="clothingPrice != null">
        clothing_price,
      </if>
      <if test="clothingQuantity != null">
        clothing_quantity,
      </if>
      <if test="clothingSkuId != null">
        clothing_sku_id,
      </if>
      <if test="clothingSkuCode != null">
        clothing_sku_code,
      </if>
      <if test="clothingCategoryId != null">
        clothing_category_id,
      </if>
      <if test="promotionName != null">
        promotion_name,
      </if>
      <if test="promotionAmount != null">
        promotion_amount,
      </if>
      <if test="couponAmount != null">
        coupon_amount,
      </if>
      <if test="integrationAmount != null">
        integration_amount,
      </if>
      <if test="realAmount != null">
        real_amount,
      </if>
      <if test="giftIntegration != null">
        gift_integration,
      </if>
      <if test="giftGrowth != null">
        gift_growth,
      </if>
      <if test="clothingAttr != null">
        clothing_attr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="clothingId != null">
        #{clothingId,jdbcType=BIGINT},
      </if>
      <if test="clothingPic != null">
        #{clothingPic,jdbcType=VARCHAR},
      </if>
      <if test="clothingName != null">
        #{clothingName,jdbcType=VARCHAR},
      </if>
      <if test="clothingBrand != null">
        #{clothingBrand,jdbcType=VARCHAR},
      </if>
      <if test="clothingSn != null">
        #{clothingSn,jdbcType=VARCHAR},
      </if>
      <if test="clothingPrice != null">
        #{clothingPrice,jdbcType=DECIMAL},
      </if>
      <if test="clothingQuantity != null">
        #{clothingQuantity,jdbcType=INTEGER},
      </if>
      <if test="clothingSkuId != null">
        #{clothingSkuId,jdbcType=BIGINT},
      </if>
      <if test="clothingSkuCode != null">
        #{clothingSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="clothingCategoryId != null">
        #{clothingCategoryId,jdbcType=BIGINT},
      </if>
      <if test="promotionName != null">
        #{promotionName,jdbcType=VARCHAR},
      </if>
      <if test="promotionAmount != null">
        #{promotionAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null">
        #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="integrationAmount != null">
        #{integrationAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null">
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="giftIntegration != null">
        #{giftIntegration,jdbcType=INTEGER},
      </if>
      <if test="giftGrowth != null">
        #{giftGrowth,jdbcType=INTEGER},
      </if>
      <if test="clothingAttr != null">
        #{clothingAttr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhm.fz.entity.OrderItemExample" resultType="java.lang.Long">
    select count(*) from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.clothingId != null">
        clothing_id = #{record.clothingId,jdbcType=BIGINT},
      </if>
      <if test="record.clothingPic != null">
        clothing_pic = #{record.clothingPic,jdbcType=VARCHAR},
      </if>
      <if test="record.clothingName != null">
        clothing_name = #{record.clothingName,jdbcType=VARCHAR},
      </if>
      <if test="record.clothingBrand != null">
        clothing_brand = #{record.clothingBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.clothingSn != null">
        clothing_sn = #{record.clothingSn,jdbcType=VARCHAR},
      </if>
      <if test="record.clothingPrice != null">
        clothing_price = #{record.clothingPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.clothingQuantity != null">
        clothing_quantity = #{record.clothingQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.clothingSkuId != null">
        clothing_sku_id = #{record.clothingSkuId,jdbcType=BIGINT},
      </if>
      <if test="record.clothingSkuCode != null">
        clothing_sku_code = #{record.clothingSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.clothingCategoryId != null">
        clothing_category_id = #{record.clothingCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.promotionName != null">
        promotion_name = #{record.promotionName,jdbcType=VARCHAR},
      </if>
      <if test="record.promotionAmount != null">
        promotion_amount = #{record.promotionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.couponAmount != null">
        coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.integrationAmount != null">
        integration_amount = #{record.integrationAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.realAmount != null">
        real_amount = #{record.realAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.giftIntegration != null">
        gift_integration = #{record.giftIntegration,jdbcType=INTEGER},
      </if>
      <if test="record.giftGrowth != null">
        gift_growth = #{record.giftGrowth,jdbcType=INTEGER},
      </if>
      <if test="record.clothingAttr != null">
        clothing_attr = #{record.clothingAttr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_item
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      clothing_id = #{record.clothingId,jdbcType=BIGINT},
      clothing_pic = #{record.clothingPic,jdbcType=VARCHAR},
      clothing_name = #{record.clothingName,jdbcType=VARCHAR},
      clothing_brand = #{record.clothingBrand,jdbcType=VARCHAR},
      clothing_sn = #{record.clothingSn,jdbcType=VARCHAR},
      clothing_price = #{record.clothingPrice,jdbcType=DECIMAL},
      clothing_quantity = #{record.clothingQuantity,jdbcType=INTEGER},
      clothing_sku_id = #{record.clothingSkuId,jdbcType=BIGINT},
      clothing_sku_code = #{record.clothingSkuCode,jdbcType=VARCHAR},
      clothing_category_id = #{record.clothingCategoryId,jdbcType=BIGINT},
      promotion_name = #{record.promotionName,jdbcType=VARCHAR},
      promotion_amount = #{record.promotionAmount,jdbcType=DECIMAL},
      coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      integration_amount = #{record.integrationAmount,jdbcType=DECIMAL},
      real_amount = #{record.realAmount,jdbcType=DECIMAL},
      gift_integration = #{record.giftIntegration,jdbcType=INTEGER},
      gift_growth = #{record.giftGrowth,jdbcType=INTEGER},
      clothing_attr = #{record.clothingAttr,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhm.fz.entity.OrderItem">
    update order_item
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="clothingId != null">
        clothing_id = #{clothingId,jdbcType=BIGINT},
      </if>
      <if test="clothingPic != null">
        clothing_pic = #{clothingPic,jdbcType=VARCHAR},
      </if>
      <if test="clothingName != null">
        clothing_name = #{clothingName,jdbcType=VARCHAR},
      </if>
      <if test="clothingBrand != null">
        clothing_brand = #{clothingBrand,jdbcType=VARCHAR},
      </if>
      <if test="clothingSn != null">
        clothing_sn = #{clothingSn,jdbcType=VARCHAR},
      </if>
      <if test="clothingPrice != null">
        clothing_price = #{clothingPrice,jdbcType=DECIMAL},
      </if>
      <if test="clothingQuantity != null">
        clothing_quantity = #{clothingQuantity,jdbcType=INTEGER},
      </if>
      <if test="clothingSkuId != null">
        clothing_sku_id = #{clothingSkuId,jdbcType=BIGINT},
      </if>
      <if test="clothingSkuCode != null">
        clothing_sku_code = #{clothingSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="clothingCategoryId != null">
        clothing_category_id = #{clothingCategoryId,jdbcType=BIGINT},
      </if>
      <if test="promotionName != null">
        promotion_name = #{promotionName,jdbcType=VARCHAR},
      </if>
      <if test="promotionAmount != null">
        promotion_amount = #{promotionAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null">
        coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="integrationAmount != null">
        integration_amount = #{integrationAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null">
        real_amount = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="giftIntegration != null">
        gift_integration = #{giftIntegration,jdbcType=INTEGER},
      </if>
      <if test="giftGrowth != null">
        gift_growth = #{giftGrowth,jdbcType=INTEGER},
      </if>
      <if test="clothingAttr != null">
        clothing_attr = #{clothingAttr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhm.fz.entity.OrderItem">
    update order_item
    set order_id = #{orderId,jdbcType=BIGINT},
      order_sn = #{orderSn,jdbcType=VARCHAR},
      clothing_id = #{clothingId,jdbcType=BIGINT},
      clothing_pic = #{clothingPic,jdbcType=VARCHAR},
      clothing_name = #{clothingName,jdbcType=VARCHAR},
      clothing_brand = #{clothingBrand,jdbcType=VARCHAR},
      clothing_sn = #{clothingSn,jdbcType=VARCHAR},
      clothing_price = #{clothingPrice,jdbcType=DECIMAL},
      clothing_quantity = #{clothingQuantity,jdbcType=INTEGER},
      clothing_sku_id = #{clothingSkuId,jdbcType=BIGINT},
      clothing_sku_code = #{clothingSkuCode,jdbcType=VARCHAR},
      clothing_category_id = #{clothingCategoryId,jdbcType=BIGINT},
      promotion_name = #{promotionName,jdbcType=VARCHAR},
      promotion_amount = #{promotionAmount,jdbcType=DECIMAL},
      coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      integration_amount = #{integrationAmount,jdbcType=DECIMAL},
      real_amount = #{realAmount,jdbcType=DECIMAL},
      gift_integration = #{giftIntegration,jdbcType=INTEGER},
      gift_growth = #{giftGrowth,jdbcType=INTEGER},
      clothing_attr = #{clothingAttr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>