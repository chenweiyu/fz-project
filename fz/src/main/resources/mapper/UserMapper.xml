<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhm.fz.mapper.UserMapper">
    <resultMap id="UserAndRole" type="com.xhm.fz.entity.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="nickname" property="nickname" />
        <result column="password" property="password" />
        <result column="enabled" property="enabled" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="sex" property="sex" />
        <result column="userface" property="userface" />
        <result column="reg_time" property="regTime" />
        <result column="state" property="state" />
        <collection property="roles" ofType="com.xhm.fz.entity.Role">
            <id column="rid" property="id" />
            <result column="name" property="name" />
        </collection>
    </resultMap>
    <!-- <resultMap id="BaseResultMap" type="com.xhm.fz.entity.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="userface" jdbcType="VARCHAR" property="userface" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="enabled" jdbcType="Integer" property="enabled" />
        <result column="regTime" jdbcType="DATETIME" property="createTime" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="status" jdbcType="INTEGER" property="status" />
    </resultMap> -->
    <sql id="Base_Column_List">
        id, username, password, userface, phone, email, nickname, sex, reg_time, enabled, state
      </sql>
    <sql id="UserAndRole">
        u.*,r.id rid,r.name
    </sql>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                      and ${criterion.condition}
                    </when>
                                <when test="criterion.singleValue">
                      and ${criterion.condition} #{criterion.value}
                    </when>
                                <when test="criterion.betweenValue">
                      and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                        #{listItem}
                      </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <select id="selectByUserName" parameterType="string" resultMap="UserAndRole">
        select
        <include refid="UserAndRole" />
        FROM user u
        LEFT JOIN roles_user ru ON u.id = ru.uid
        LEFT JOIN roles r ON ru.rid = r.id
        WHERE u.username = #{username}
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="UserAndRole">
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>


    <select id="selectByExample" parameterType="com.xhm.fz.entity.UserExample" resultMap="UserAndRole">
        select
        <if test="distinct">
          distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
          order by ${orderByClause}
        </if>
    </select>

    <update id="updateByIdUser" parameterType="com.xhm.fz.entity.UserDet">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="userface != null">
                userface = #{userface,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.xhm.fz.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="userface != null">
                userface = #{userface,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
      </update>

      <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=BIGINT}
      </delete>

      <delete id="deleteByExample" parameterType="com.xhm.fz.entity.UserExample">
        delete from user
        <if test="_parameter != null">
          <include refid="Example_Where_Clause" />
        </if>
      </delete>

      <insert id="insert" parameterType="com.xhm.fz.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
          SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (username, password, userface, 
          email, nickname, phone, sex, 
          reg_time, enabled, state
          )
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userface,jdbcType=VARCHAR}, 
          #{email,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
          #{regTime,jdbcType=TIMESTAMP}, #{enabled,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}
          )
      </insert>
</mapper>